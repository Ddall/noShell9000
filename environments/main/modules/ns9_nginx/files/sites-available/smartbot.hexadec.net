
server {
    listen 80;
    server_name smartbot.hexadec.net;
    return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl;
	server_name smartbot.hexadec.net;

	ssl_certificate /etc/letsencrypt/live/smartbot.hexadec.net/cert.pem;
	ssl_certificate_key /etc/letsencrypt/live/smartbot.hexadec.net/privkey.pem;

	error_log /var/log/nginx/smartbot.hexadec.net-error.log;
	location / {
		# try to serve file directly, fallback to app.php
		try_files $uri /app.php$is_args$args;
	}
	
	root /home/web/SmartRobot/web;

	# DEV
	# This rule should only be placed on your development environment
	# In production, don't include this and don't deploy app_dev.php or config.php
	location ~ ^/(app_dev|config)\.php(/|$) {
		fastcgi_pass php-handler;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP's OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		fastcgi_param  SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
	}

	# PROD
	location ~ ^/app\.php(/|$) {
		fastcgi_pass php-handler;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP's OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		fastcgi_param  SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
		# Prevents URIs that include the front controller. This will 404:
		# http://domain.tld/app.php/some-path
		# Remove the internal directive to allow URIs like this
		internal;
	}


    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

}
